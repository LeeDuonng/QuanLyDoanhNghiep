<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        SUVORK5CYII=
</value>
  </data>
</root>